steps:
- powershell: |
    $PreRelease = ""
    $Source = ""
    $PackageId = ""

    if ("$(RegistryUrl)" -eq "MyGet")
    {
        $Source = '-Source "https://botbuilder.myget.org/F/botbuilder-v4-dotnet-daily/api/v3/index.json"'
    }
    elseif("$(RegistryUrl)" -eq "NuGet")
    {
        $PackageId = "packageid:"
    }
    elseif("$(RegistryUrl)" -eq "Artifacts")
    {
        $Source = '-Source "https://pkgs.dev.azure.com/ConversationalAI/BotFramework/_packaging/SDK/nuget/v3/index.json"'
    }
    else
    {
        $Source = '-Source "$(RegistryUrl)"'
    }

    if ("$(BBVersion)" -eq "preview")
    {
      $PreRelease = "-PreRelease"
    }

    $version = ""
    $versionTag = ""

    if ("$(BBVersion)" -in("stable","preview"))
    {
      $versionTag = " ($(BBVersion))"
      $PackageList = Invoke-Expression "nuget list ${PackageId}Microsoft.Bot.Builder.Integration.AspNet.Core $Source $PreRelease"
      $version = $PackageList.Split(" ")[-1]
    }
    else 
    {
      $version = "$(BBVersion)"
    }

    switch -wildcard ("$(Parameters.project)".Trim())
    {
      "*/Consumers/*" { echo "##vso[task.setvariable variable=HostOrSkill]Host" }
      "*/Skills/*" { echo "##vso[task.setvariable variable=HostOrSkill]Skill" }
      default { echo "##vso[task.setvariable variable=HostOrSkill]" }
    }
    
    write-host "Version: " $version $versionTag
    echo "##vso[task.setvariable variable=PackagesVersionTag]$versionTag"
    echo "##vso[task.setvariable variable=PackagesVersion]$version"
  failOnStderr: true
  displayName: 'Get BotBuilder Version'

- task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0
  displayName: 'Tag build with package version'
  inputs:
    tags: 'BotBuilderVersion$(HostOrSkill)=$(PackagesVersion)$(PackagesVersionTag)'
  continueOnError: true
